// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Workshop3.EFCore.Data.EFCore;

#nullable disable

namespace Workshop3.EFCore.Data.EFCore.Migrations
{
    [DbContext(typeof(MusicWikiContext))]
    partial class MusicWikiContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Workshop3.EFCore.Domain.Album", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ArtistId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ArtistId");

                    b.ToTable("Albums");

                    b.HasData(
                        new
                        {
                            Id = 3,
                            ArtistId = 1,
                            ReleaseDate = new DateTime(1986, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Master of Puppets"
                        },
                        new
                        {
                            Id = 2,
                            ArtistId = 1,
                            ReleaseDate = new DateTime(1984, 7, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Ride the Lightning"
                        },
                        new
                        {
                            Id = 1,
                            ArtistId = 1,
                            ReleaseDate = new DateTime(1983, 7, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Kill 'Em All"
                        });
                });

            modelBuilder.Entity("Workshop3.EFCore.Domain.Artist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Artists");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Metallica"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Megadeth"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Slayer"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Anthrax"
                        });
                });

            modelBuilder.Entity("Workshop3.EFCore.Domain.Album", b =>
                {
                    b.HasOne("Workshop3.EFCore.Domain.Artist", "Artist")
                        .WithMany("Albums")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artist");
                });

            modelBuilder.Entity("Workshop3.EFCore.Domain.Artist", b =>
                {
                    b.Navigation("Albums");
                });
#pragma warning restore 612, 618
        }
    }
}
